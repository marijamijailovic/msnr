Implementacija funkcionalnih jezika predstavlja veoma tezak posao i
obimnu temu. U ovom radu fokus je na kompilaciji funkcionalnih jezika,
najvise na procesu transformacije funkcionalnog koda u Haskel-u. Citalac 
bi trebalo da, nakon citanja ovog rada, bude upoznat sa teorijskim osnovama
kompiliranja funkcionalnih jezika, razume transformaciju izvornog
koda i bude u stanju da samostalno istrazuje na ovu temu.
U našem radu smo se fokusirali na prevodenje izvnornog koda do mašinskog jezika. 
Taj proces se sastoji od 3 faze : frontend, middle end i backend. U radu su detaljno opisane
kljucne faze za efikasnost prevodenja i jedan od najvažnijih razloga za, danas 
široku upotrebu Haskell jezika. Te faze su transformacija koda i LLVM framework.
/TODO mozda u kratkim crtama opisati sta se radi u ove 2 faze...
GHC kompajler je u stalnom razvoju, a trenutno programeri se najvišse fokusiraju na
razvoj strategija izvodenja, razne strukture koje bi omogucile efikasniji rad
skupljaca djubreta(eng. garbage collector) i na unapredenje izuzetaka pri prekorecenju
heap memorije(dosadašnje verzije izbacuju nedostatke samo pri odredenim okolnostima).